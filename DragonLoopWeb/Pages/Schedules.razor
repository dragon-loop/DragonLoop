@page "/schedules"
@using DragonLoopViewModels.ViewModels
@using Microsoft.AspNetCore.Components;
@inject NavigationManager MyNavigationManager

<h1>Schedules</h1>

@if (scheduleViewModel.Schedules == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select @onchange="SelectRoute">
        @foreach (var route in scheduleViewModel.Routes)
        {
            <option value=@route.RouteId>@route.Name</option>
        }
    </select>
    <table class="table">
        <thead>
            <tr>
                @foreach (var stop in scheduleViewModel.SelectedRoute.Stops)
                {
                    <th>@stop.Name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var schedules in scheduleViewModel.Schedules)
            {
                <tr>
                    @foreach (var schedule in schedules)
                    {
                        <td>@schedule.ExpectedTime.ToString("hh\\:mm")</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ScheduleViewModel scheduleViewModel;

    protected override async Task OnInitializedAsync()
    {
        scheduleViewModel = new ScheduleViewModel(MyNavigationManager.BaseUri + "/api");
        await scheduleViewModel.LoadRoutes();
        await scheduleViewModel.SetSelectedRoute(scheduleViewModel.Routes.First());
    }

    private async Task SelectRoute(ChangeEventArgs e)
    {
        var route = scheduleViewModel.Routes.Single(r => r.RouteId == int.Parse(e.Value.ToString()));
        await scheduleViewModel.SetSelectedRoute(route);
    }
}